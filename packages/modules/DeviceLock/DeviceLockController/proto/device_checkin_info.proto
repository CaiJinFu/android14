/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package devicelockcontroller;

option java_package = "com.android.devicelockcontroller.proto";
option java_multiple_files = true;

// The different states a device that did a check-in with the Device Lock
// server can be in.
enum DeviceCheckinStatus {
  DEVICE_CHECKIN_STATUS_UNSPECIFIED = 0;
  // The device is not ready for provisioning.
  DEVICE_CHECKIN_STATUS_PROVISION_NOT_READY = 1;
  // The device is ready for provisioning.
  DEVICE_CHECKIN_STATUS_PROVISION_READY = 2;
  // The device completed the locking program.
  DEVICE_CHECKIN_STATUS_COMPLETE = 3;
  // The device did not get enrolled within the registration window.
  DEVICE_CHECKIN_STATUS_PROVISION_NOT_REQUIRED = 4;
  // The device is in a country where Device Lock is not approved.
  DEVICE_CHECKIN_STATUS_GEOLOCATION_UNAVAILABLE = 5;
  // Device identifiers provided by the client that are not registered
  // on the Device Lock portal. The client provides a list of device identifiers
  // and if one of them is found that is registered on the Device Lock portal,
  // then the rest of the device identifiers are set to this check-in status.
  DEVICE_CHECKIN_STATUS_TO_BE_PURGE = 6;
}

// The different provisioning methods the Device Lock Android client can
// provision the device.
enum DeviceProvisionType {
  DEVICE_PROVISION_TYPE_UNSPECIFIED = 0;
  // The device provision should be after the SUW.
  DEVICE_PROVISION_TYPE_DEFERRED = 1;
  // The device provision should be during the SUW.
  DEVICE_PROVISION_TYPE_MANDATORY = 2;
}

message DeviceCheckinInfo {}
