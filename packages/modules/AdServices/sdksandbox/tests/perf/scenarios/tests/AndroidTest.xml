<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ Copyright (C) 2022 The Android Open Source Project
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<configuration description="Config for integration test scenarios">
    <option name="test-tag" value="SdkSandboxPerfScenarioTests" />

    <target_preparer class="com.android.tradefed.targetprep.DeviceSetup">
        <!-- DeviceSetup will root the device. -->
        <option name="set-test-harness" value="true" />
    </target_preparer>


    <target_preparer class="com.android.tradefed.targetprep.suite.SuiteApkInstaller">
        <option name="cleanup-apks" value="true"/>
        <option name="test-file-name" value="SdkSandboxPerfScenarioTests.apk"/>
        <option name="test-file-name" value="SdkSandboxCodeProvider.apk"/>
        <option name="test-file-name" value="SdkSandboxMediateeProvider.apk"/>
        <option name="test-file-name" value="SdkSandboxWebViewProvider.apk"/>
        <option name="test-file-name" value="SdkSandboxClient.apk"/>
    </target_preparer>

    <target_preparer class="com.android.tradefed.targetprep.RunCommandTargetPreparer">
        <option name="run-command" value="cmd sdk_sandbox set-state --enabled" />
        <option name="run-command" value="device_config set_sync_disabled_for_tests persistent" />
        <option name="teardown-command" value="device_config set_sync_disabled_for_tests none" />
        <option name="teardown-command" value="cmd sdk_sandbox set-state --reset" />
    </target_preparer>


    <!-- Needed for pulling the collected trace config on to the host. -->
    <metrics_collector class="com.android.tradefed.device.metric.FilePullerLogCollector">
        <option name="pull-pattern-keys" value="perfetto_file_path" />
    </metrics_collector>

    <!-- Needed for storing the perfetto trace files in the sdcard/test_results. -->
    <option name="isolated-storage" value="false" />

    <test class="com.android.tradefed.testtype.AndroidJUnitTest">
        <option name="package" value="android.sdksandbox.test.scenario"/>
        <option name="runner" value="androidx.test.runner.AndroidJUnitRunner" />
        <option name="class" value="android.sdksandbox.test.scenario.sampleclient.LoadSdkMicrobenchmark,android.sdksandbox.test.scenario.sampleclient.RemoteRenderAdMicrobenchmark" />

        <!-- Listener for collecting the traces and waiting for the device to stabilize. -->
        <option name="device-listeners" value="android.device.collectors.PerfettoListener" />
        <option name="instrumentation-arg" key="newRunListenerMode" value="true" />

        <!-- PerfettoListener related arguments. -->
        <option name="instrumentation-arg" key="perfetto_config_text_proto" value="true" />
        <option name="instrumentation-arg"
                key="perfetto_config_file" value="trace_config.textproto" />
    </test>
</configuration>